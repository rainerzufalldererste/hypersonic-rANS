# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=release_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

INCLUDES +=
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release_x64)
RESCOMP = windres
TARGETDIR = builds/bin
TARGET = $(TARGETDIR)/hsrans
OBJDIR = intermediate/obj/x64/Release
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DSSE2 -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -fomit-frame-pointer -O3 -g -Wall -Wextra -mxsave
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -fomit-frame-pointer -O3 -g -Wall -Wextra -std=c++20 -fno-exceptions -fno-stack-protector -fno-rtti -mxsave
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -pthread

else ifeq ($(config),debug_x64)
RESCOMP = windres
TARGETDIR = builds/bin
TARGET = $(TARGETDIR)/hsransD
OBJDIR = intermediate/obj/x64/Debug
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DSSE2 -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra -mxsave
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra -std=c++20 -fno-exceptions -fno-rtti -mxsave
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread

else ifeq ($(config),releaseclang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = builds/bin
TARGET = $(TARGETDIR)/hsrans
OBJDIR = intermediate/obj/x64/ReleaseClang
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DSSE2
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -Wall -Wextra -mxsave -Ofast
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -Wall -Wextra -std=c++20 -fno-exceptions -fno-rtti -mxsave -Ofast
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread

else ifeq ($(config),debugclang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = builds/bin
TARGET = $(TARGETDIR)/hsrans
OBJDIR = intermediate/obj/x64/DebugClang
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DSSE2 -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra -mxsave
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra -std=c++20 -fno-exceptions -fno-rtti -mxsave
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/block_rANS32x32_16w_decode.o
GENERATED += $(OBJDIR)/block_rANS32x32_16w_encode.o
GENERATED += $(OBJDIR)/block_rANS32x64_16w_decode.o
GENERATED += $(OBJDIR)/block_rANS32x64_16w_encode.o
GENERATED += $(OBJDIR)/hist.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/mt_rANS32x32_16w_decode.o
GENERATED += $(OBJDIR)/mt_rANS32x32_16w_encode.o
GENERATED += $(OBJDIR)/mt_rANS32x64_16w_decode.o
GENERATED += $(OBJDIR)/mt_rANS32x64_16w_encode.o
GENERATED += $(OBJDIR)/rANS32x16_16w.o
GENERATED += $(OBJDIR)/rANS32x32_16w.o
GENERATED += $(OBJDIR)/rANS32x64_16w.o
GENERATED += $(OBJDIR)/rans32x32_32blk_16w.o
GENERATED += $(OBJDIR)/rans32x32_32blk_8w.o
GENERATED += $(OBJDIR)/simd_platform.o
GENERATED += $(OBJDIR)/thread_pool.o
OBJECTS += $(OBJDIR)/block_rANS32x32_16w_decode.o
OBJECTS += $(OBJDIR)/block_rANS32x32_16w_encode.o
OBJECTS += $(OBJDIR)/block_rANS32x64_16w_decode.o
OBJECTS += $(OBJDIR)/block_rANS32x64_16w_encode.o
OBJECTS += $(OBJDIR)/hist.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/mt_rANS32x32_16w_decode.o
OBJECTS += $(OBJDIR)/mt_rANS32x32_16w_encode.o
OBJECTS += $(OBJDIR)/mt_rANS32x64_16w_decode.o
OBJECTS += $(OBJDIR)/mt_rANS32x64_16w_encode.o
OBJECTS += $(OBJDIR)/rANS32x16_16w.o
OBJECTS += $(OBJDIR)/rANS32x32_16w.o
OBJECTS += $(OBJDIR)/rANS32x64_16w.o
OBJECTS += $(OBJDIR)/rans32x32_32blk_16w.o
OBJECTS += $(OBJDIR)/rans32x32_32blk_8w.o
OBJECTS += $(OBJDIR)/simd_platform.o
OBJECTS += $(OBJDIR)/thread_pool.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking hsrans
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning hsrans
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/block_rANS32x32_16w_decode.o: src/block_rANS32x32_16w_decode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_rANS32x32_16w_encode.o: src/block_rANS32x32_16w_encode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_rANS32x64_16w_decode.o: src/block_rANS32x64_16w_decode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_rANS32x64_16w_encode.o: src/block_rANS32x64_16w_encode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hist.o: src/hist.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mt_rANS32x32_16w_decode.o: src/mt_rANS32x32_16w_decode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mt_rANS32x32_16w_encode.o: src/mt_rANS32x32_16w_encode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mt_rANS32x64_16w_decode.o: src/mt_rANS32x64_16w_decode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mt_rANS32x64_16w_encode.o: src/mt_rANS32x64_16w_encode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rANS32x16_16w.o: src/rANS32x16_16w.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rANS32x32_16w.o: src/rANS32x32_16w.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rANS32x64_16w.o: src/rANS32x64_16w.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rans32x32_32blk_16w.o: src/rans32x32_32blk_16w.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rans32x32_32blk_8w.o: src/rans32x32_32blk_8w.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/simd_platform.o: src/simd_platform.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/thread_pool.o: src/thread_pool.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif